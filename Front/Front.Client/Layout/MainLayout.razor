@using static System.Net.WebRequestMethods
@inherits LayoutComponentBase
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject IJSRuntime JSRuntime
@using MudBlazor.Components
@using System.Text.Json.Serialization
@inject NavigationManager NavigationManager


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Style="background-color: #41357d">
        <MudImage Fluid="true" Src="images/Logo.png" Height="40" Width="40" Alt="Logo Firmy" Elevation="0" Style="background-color: #41357d;" />
        <MudSpacer/>
        @if (!ShouldShowNavMenu())
        {
            <UserMenu />
        }
        <MudSpacer/>
        <MudButton OnClick="Logout" StartIcon="@Icons.Material.Filled.Login" Color="Color.Inherit"></MudButton>
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>

</MudLayout>

@code {
    private bool IsLogIn = false;
    private bool ShouldShowNavMenu()
    {
        var currentUri = NavigationManager.Uri; 
        var relativeUri = NavigationManager.ToBaseRelativePath(currentUri);

        return relativeUri == "";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");

                if (string.IsNullOrEmpty(token))
                {
                    IsLogIn = false;
                }
                else
                {
                    IsLogIn = true;
                }
            }
        }
        catch(Exception ex)
        {
            Snackbar.Add($"Błąd podczas ładowania menu: {ex.Message}", Severity.Error);
        }
    }

    private async Task Logout()
    {
        if(!IsLogIn)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
            NavigationManager.NavigateTo("/");
        }
    }
}