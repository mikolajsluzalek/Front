@page "/samochody"
@using System.Net.Http.Json
@using MudBlazor
@inject ISnackbar Snackbar

<div style="margin-top: 2rem;" />
<MudContainer MaxWidth="MaxWidth.Large">
    <MudTable Items="@VehicleList" Hover="true" Dense="false" ReadOnly="false" CanCancelEdit="true"
              EditTrigger="TableEditTrigger.EditButton" EditButtonPosition="TableEditButtonPosition.End"
              ApplyButtonPosition="TableApplyButtonPosition.End"
              RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues" RowEditCommit="ItemHasBeenCommitted"
              Filter="new Func<VehicleDetails,bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Lista Pojazdów</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Szukaj" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <ColGroup>
            <col style="width:50px;" />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col style="width:100px;" />
        </ColGroup>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDetails, object>(x => x.Make)">Marka</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDetails, object>(x => x.Model)">Model</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDetails, object>(x => x.LicensePlate)">Tablica Rejestracyjna</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDetails, object>(x => x.ServiceDue)">Serwis Do</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDetails, object>(x => x.LeaseEnd)">Koniec Leasingu</MudTableSortLabel></MudTh>
            <MudTh>Akcje</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Marka">@context.Make</MudTd>
            <MudTd DataLabel="Model">@context.Model</MudTd>
            <MudTd DataLabel="Tablica Rejestracyjna">@context.LicensePlate</MudTd>
            <MudTd DataLabel="Serwis Do">@context.ServiceDue?.ToString("dd-MM-yyyy")</MudTd>
            <MudTd DataLabel="Koniec Leasingu">@context.LeaseEnd?.ToString("dd-MM-yyyy")</MudTd>
            <MudTd DataLabel="Akcje">
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" OnClick="() => ShowDetails(context)">
                    Szczegóły
                </MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>

<MudDialog @bind-IsVisible="isDetailsDialogOpen" MaxWidth="MaxWidth.Medium">
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-2">Szczegóły Pojazdu</MudText>
        <MudDivider Class="mb-2" />
        <MudText><strong>Marka:</strong> @selectedVehicle?.Make</MudText>
        <MudText><strong>Model:</strong> @selectedVehicle?.Model</MudText>
        <MudText><strong>Tablica Rejestracyjna:</strong> @selectedVehicle?.LicensePlate</MudText>
        <MudText><strong>Serwis Do:</strong> @selectedVehicle?.ServiceDue?.ToString("dd-MM-yyyy")</MudText>
        <MudText><strong>Koniec Leasingu:</strong> @selectedVehicle?.LeaseEnd?.ToString("dd-MM-yyyy")</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => isDetailsDialogOpen = false">
            Zamknij
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private string searchString = string.Empty;
    private List<VehicleDetails> VehicleList = new List<VehicleDetails>
    {
        new VehicleDetails
        {
            Make = "Toyota",
            Model = "RAV4",
            LicensePlate = "WX67890",
            ServiceDue = DateTime.Now.AddMonths(5),
            LeaseEnd = DateTime.Now.AddMonths(12)
        },
        new VehicleDetails
        {
            Make = "Honda",
            Model = "Civic",
            LicensePlate = "KR12345",
            ServiceDue = DateTime.Now.AddMonths(3),
            LeaseEnd = DateTime.Now.AddMonths(8)
        }
    };

    private VehicleDetails vehicleBeforeEdit;
    private VehicleDetails selectedVehicle;
    private bool isDetailsDialogOpen = false;

    private void BackupItem(object vehicle)
    {
        vehicleBeforeEdit = new VehicleDetails
        {
            Make = ((VehicleDetails)vehicle).Make,
            Model = ((VehicleDetails)vehicle).Model,
            LicensePlate = ((VehicleDetails)vehicle).LicensePlate,
            ServiceDue = ((VehicleDetails)vehicle).ServiceDue,
            LeaseEnd = ((VehicleDetails)vehicle).LeaseEnd
        };
    }

    private void ResetItemToOriginalValues(object vehicle)
    {
        ((VehicleDetails)vehicle).Make = vehicleBeforeEdit.Make;
        ((VehicleDetails)vehicle).Model = vehicleBeforeEdit.Model;
        ((VehicleDetails)vehicle).LicensePlate = vehicleBeforeEdit.LicensePlate;
        ((VehicleDetails)vehicle).ServiceDue = vehicleBeforeEdit.ServiceDue;
        ((VehicleDetails)vehicle).LeaseEnd = vehicleBeforeEdit.LeaseEnd;
    }

    private void ItemHasBeenCommitted(object vehicle)
    {
        Snackbar.Add($"Pojazd {((VehicleDetails)vehicle).Make} {((VehicleDetails)vehicle).Model} został zaktualizowany.", Severity.Success);
    }

    private void ShowDetails(VehicleDetails vehicle)
    {
        selectedVehicle = vehicle;
        isDetailsDialogOpen = true;
    }

    private bool FilterFunc(VehicleDetails vehicle)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        return vehicle.Make?.Contains(searchString, StringComparison.OrdinalIgnoreCase) == true ||
               vehicle.Model?.Contains(searchString, StringComparison.OrdinalIgnoreCase) == true ||
               vehicle.LicensePlate?.Contains(searchString, StringComparison.OrdinalIgnoreCase) == true;
    }

    public class VehicleDetails
    {
        public string Make { get; set; }
        public string Model { get; set; }
        public string LicensePlate { get; set; }
        public DateTime? ServiceDue { get; set; }
        public DateTime? LeaseEnd { get; set; }
    }
}
